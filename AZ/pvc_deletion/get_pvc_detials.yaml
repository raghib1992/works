name: Get Detials of volume of Specific User

on:
  workflow_dispatch:
    inputs:
      clusterName:
        type: choice
        required: true
        description: Select Cluster
        default: 'dev' 
        options: 
        - bronze
        - dev
        - iron
        - jade
        - lead
        - onyx
      prid:
        type: string
        description: "User PRID"
        required: true
      namespace:
        type: string
        description: "namespace"
        required: true

env:
  ## Sets environment variable for internet access
  http_proxy: http://azpse.astrazeneca.net:9480
  https_proxy: http://azpse.astrazeneca.net:9480
  no_proxy: 10.0.0.0/8,172.29.0.0/8,astrazeneca.net

jobs:
  update-state-file:
    runs-on:
      - self-hosted
      - azimuth-azimuth-profiles
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      
      - name: Set APT Proxy Configuration
        run: |
          echo "Acquire::http::proxy \"${{ env.http_proxy }}\";" | sudo tee -a /etc/apt/apt.conf
          echo "Acquire::https::proxy \"${{ env.https_proxy }}\";" | sudo tee -a /etc/apt/apt.conf
          echo "Acquire::ftp::proxy \"${{ env.http_proxy }}\";" | sudo tee -a /etc/apt/apt.conf
          echo "Acquire::http::proxy::no_proxy \"${{ env.no_proxy }}\";" | sudo tee -a /etc/apt/apt.conf

      - name: Install Kubectl
        id: kubectl-install
        uses: azure/setup-kubectl@v4.0.0
        with:
          version: 'v1.25.0'
      
      - name: Configure kubeconfig
        id: kubeconfig-setup
        run: |
          echo $KUBECONFIG | base64 -d > /tmp/kubeconfig
        env:
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}
      
      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install kubernetes argparse
        working-directory: ./scripts

      - name: get volume details
        id: pvc_details
        run: |
          echo "Gettig the details volume"
          output=$(python volume-details.py -c ${{ inputs.clusterName }} -p ${{ inputs.prid }} -n ${{ inputs.namespace }})
          echo "Volume Details output: $output"
          echo "script_output=$output" >> $GITHUB_OUTPUT
        working-directory: ./scripts
        env:
          KUBECONFIG: /tmp/kubeconfig
      
      - name: Display Output
        run: |
          echo "pvc details: ${{ steps.pvc_details.outputs.script_output }}"

      - name: Get CSV file
        uses: actions/upload-artifact@v3
        with:
          name: volume_details
          path: ./scripts/volume_details.csv
    
    